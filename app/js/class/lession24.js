/**
 * 作用域 和 上下文环境
 *  作用域何时定义: 除了全局作用域之外，作用域在函数定义时就
 *  已经确定了，而不是函数调用时确定
 *
 */

// javascript没有块级作用域(ES5)，且还要了解只有函数可以创建的作用域
// 我们在申明变量时，全局代码要在代码前端声明，函数中要在函数体一开始就声明好。
// 作用域有上下级的关系，上下级关系的确定就看函数是在哪个作用域下创建的
{
  let a = 10, // 全局作用域
    b = 20
  function fn() {
    // fn函数作用域
    let a = 20,
      b = 30
    function bar() {
      // bar函数作用域
      let a = 30
      b = 40
    }
  }
  // 总结: 作用域最大的用处就是隔离变量，不同作用域下同名变量不会有冲突
}

{
  // 全局作用域
  let a = 10,
    b = 20
  function fn(x) {
    let a = 100,
      c = 300
    // fn作用域
    function bar(x) {
      let a = 1000
      let b = 4000
      // bar作用域
    }
    bar(100)
    bar(200)
  }
  fn(10)
}

/**
 *
 * 结论: 作用域只是一个“地盘”，一个抽象的概念，其中没有变量。
 * 要通过作用域对应的执行上下文环境来获取变量的值。
 * 作用域中变量的值是在执行过程中产生的确定的，而作用域却是在函数创建时就确定了
 * 所以,作用域的确定始终优先于作用域内变量的赋值
 * 如果要查找一个作用域下某个变量的值，
 * 就需要找到这个作用域对应的执行上下文环境，再在其中寻找变量的值
 *
 */
